// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package httpclient is a generated GoMock package.
package httpclient

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHTTPSender is a mock of HTTPSender interface
type MockHTTPSender struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPSenderMockRecorder
}

// MockHTTPSenderMockRecorder is the mock recorder for MockHTTPSender
type MockHTTPSenderMockRecorder struct {
	mock *MockHTTPSender
}

// NewMockHTTPSender creates a new mock instance
func NewMockHTTPSender(ctrl *gomock.Controller) *MockHTTPSender {
	mock := &MockHTTPSender{ctrl: ctrl}
	mock.recorder = &MockHTTPSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHTTPSender) EXPECT() *MockHTTPSenderMockRecorder {
	return m.recorder
}

// Send mocks base method
func (m *MockHTTPSender) Send(c context.Context, req Request) (*Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", c, req)
	ret0, _ := ret[0].(*Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Send indicates an expected call of Send
func (mr *MockHTTPSenderMockRecorder) Send(c, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockHTTPSender)(nil).Send), c, req)
}
