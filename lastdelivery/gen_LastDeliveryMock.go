// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package lastdelivery is a generated GoMock package.
package lastdelivery

import (
	context "context"
	httpclient "github.com/MarcGrol/forwardhttp/httpclient"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLastDeliverer is a mock of LastDeliverer interface
type MockLastDeliverer struct {
	ctrl     *gomock.Controller
	recorder *MockLastDelivererMockRecorder
}

// MockLastDelivererMockRecorder is the mock recorder for MockLastDeliverer
type MockLastDelivererMockRecorder struct {
	mock *MockLastDeliverer
}

// NewMockLastDeliverer creates a new mock instance
func NewMockLastDeliverer(ctrl *gomock.Controller) *MockLastDeliverer {
	mock := &MockLastDeliverer{ctrl: ctrl}
	mock.recorder = &MockLastDelivererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLastDeliverer) EXPECT() *MockLastDelivererMockRecorder {
	return m.recorder
}

// OnLastDelivery mocks base method
func (m *MockLastDeliverer) OnLastDelivery(c context.Context, req httpclient.Request, resp *httpclient.Response, err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnLastDelivery", c, req, resp, err)
}

// OnLastDelivery indicates an expected call of OnLastDelivery
func (mr *MockLastDelivererMockRecorder) OnLastDelivery(c, req, resp, err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnLastDelivery", reflect.TypeOf((*MockLastDeliverer)(nil).OnLastDelivery), c, req, resp, err)
}
